<script type="text/javascript">
        jQuery.ajaxSettings.traditional = true;
        $(function () {
            $('#Month-filter').datepicker({
                format: "m/yyyy",
                viewMode: "months",
                minViewMode: "months",
                autoclose: true,
                inline: true,
            }).datepicker("setDate", new Date());

            $("#Year-filter").datepicker({
                format: "yyyy",
                viewMode: "years",
                minViewMode: "years",
                autoclose: true
            }).datepicker("setDate", new Date());
        });


        $(document).ready(function () {
            document.getElementById('seLicense').style.display = 'none';

            $('#MultiRegion').selectpicker('selectAll');
            //document.getElementById('chooseYear').style.display = 'none';
            if (document.getElementById('radioMonth').checked) {
                document.getElementById('chooseMonth').style.display = 'inline-block';
                document.getElementById('chooseYear').style.display = 'none';
            }
            else if (document.getElementById('radioYear').checked) {
                document.getElementById('chooseMonth').style.display = 'none';
                document.getElementById('chooseYear').style.display = 'inline-block';
            }
            else {
                document.getElementById('chooseMonth').style.display = 'none';
                document.getElementById('chooseYear').style.display = 'none';
            }


        });


        var tblOption = {
            buttons: [
               {
                   extend: 'excel',
                   text: 'Save current page',
                   exportOptions: {
                       modifier: {
                           page: 'current'
                       }
                   }
               }
            ]
        };

        var tblOption2 = {
            dom: 'Bfrtip',
            buttons: [
                'copy', 'csv', 'excel', 'pdf', 'print'
            ]
        };
        $('#utilTbl').DataTable(tblOption2);

        var _graphPipeLine = null;

        var _graphGate = null;

        const monthNames = ["January", "February", "March", "April", "May", "June",
            "July", "August", "September", "October", "November", "December"
        ];

        function getHeaderDate() {
            var datNow = new Date();
            var strMonthName = monthNames[datNow.getMonth()];
            var strYear = datNow.getFullYear();
            return strMonthName + " " + strYear;
        }
        $("#lblLeftDate").text(getHeaderDate());
        $("#lblRightDate").text("");
        //var datamonth = month;
        function Search() {
            var threshold = document.getElementById('threshold-filter').value;
            var type = document.getElementById('type-filter').value;
            let url;
            // var datet = $('#Month-filter').val();

            if (document.getElementById('radioMonth').checked && $('#Month-filter').datepicker('getDate') != null) {
                if (document.getElementById('chooseMonth').value != "") {
                    var date = $('#Month-filter').datepicker('getDate'),
                          month = date.getMonth() + 1,
                          year = date.getFullYear();
                }

            }
            else if (document.getElementById('radioYear').checked && $('#Year-filter').datepicker('getDate') != null) {
                if (document.getElementById('chooseYear').value != "") {
                    var date = $('#Year-filter').datepicker('getDate'),
                         year = date.getFullYear();
                    var month = "null";
                }
                // document.getElementById('chooseYear').style.display = 'none';
            }
            else { var month = "null"; var year = "null"; }
            

            let multidata;
            let strMode = "";
           
            if (document.getElementById('radioRegion').checked) {
                url = '@Url.Action("SearchRegionReport")';
                multidata = SeRegion;
                strMode = "region";
                
            }
            else if (document.getElementById('radioLicense').checked) {
                url = '@Url.Action("SearchLicenseReport")';
                multidata = SeLicense;
                strMode = "license";
            }
            var multidataAll = {
                Threshold: threshold,
                Type: type,
                Month: month,
                Year: year,
                MultiData: multidata
            }

            $("#lblRightDate").text("");
            $.ajax({
                url: url,
                type: 'POST',
                data: JSON.stringify(multidataAll),
                contentType: 'application/json; charset=utf-8',
                datatype: 'json',
                success: function (data) {
                    
                    showPIE("PIPELINE", data);
                    showPIE("GATE", data);
                    showUtilTable(data);
                    $("#lblRightDate").text(monthNames[month-1] + " " + year);
                },
                error: function (result) {
                    alert('Please select the data');
                }
            });            
            VIEW_GATE_PIPE_REPORT_CURRENT("Region", multidata);
        }

        function showUtilTable(data) {
            let tblShow = $("#utilTbl").DataTable();
            tblShow.clear()
            $('#utilTbl').find('tbody tr').each(function () {
                this.remove();
            });
            passPipe = 0;
            passGate = 0;
            warningPipe = 0;
            warningGate = 0;
            alertGate = 0;
            alertPipe = 0;
            flagGate = 0;
            flagPipe = 0;
            for (let i in data) {
                if (data[i].THRESHOLD == "OK" && data[i].TYPE == "GATESTATION")
                { passGate = 1 + passGate; }
                else if (data[i].THRESHOLD == "OK" && data[i].TYPE == "PIPELINE")
                { passPipe = 1 + passPipe; }

                else if (data[i].THRESHOLD == "Warning" && data[i].TYPE == "GATESTATION")
                { warningGate = 1 + warningGate; }
                else if (data[i].THRESHOLD == "Warning" && data[i].TYPE == "PIPELINE")
                { warningPipe = 1 + warningPipe; }

                else if (data[i].THRESHOLD == "Alert" && data[i].TYPE == "GATESTATION")
                { alertGate = 1 + alertGate; }
                else if (data[i].THRESHOLD == "Alert" && data[i].TYPE == "PIPELINE")
                { alertPipe = 1 + alertPipe; }

                else if (data[i].THRESHOLD == "Flag" && data[i].TYPE == "GATESTATION")
                { flagGate = 1 + flagGate; }
                else if (data[i].THRESHOLD == "Flag" && data[i].TYPE == "PIPELINE")
                { flagPipe = 1 + flagPipe; }

                num = 1 + Number(i);
                if (data[i].TYPE == "PIPELINE")
                { unit = "ft/s"; }
                else if (data[i].TYPE == "GATESTATION")
                { unit = "%"; }
                if (document.getElementById('radioMonth').checked) {
                    dataMonthYear = data[i].MONTH + '/' + data[i].YEAR;
                }
                else if (document.getElementById('radioYear').checked)
                { dataMonthYear = data[i].YEAR; }
                if (document.getElementById('radioMonth').checked) {
                    dataMonthYear = data[i].MONTH + '/' + data[i].YEAR;
                }
                else if (document.getElementById('radioYear').checked)
                { dataMonthYear = data[i].YEAR; }

                var rowItem = '<tr id="' + data[i].NO + '" class="rowfil" ><td><h6 class="margin-lr0">' + num + '</h6></td><td><h6 class="margin-lr0">' + data[i].NAME + '</h6></td><td><h6 class="margin-lr0">' + data[i].REGION + '</h6></td><td><h6 class="margin-lr0">' + data[i].LICENSE + '</h6></td><td><h6 class="margin-lr0">' + data[i].VALUE + ' ' + unit + '</h6></td><td><h6 class="margin-lr0">' + data[i].THRESHOLD + '</h6></td><td><h6 class="margin-lr0">' + dataMonthYear + '</h6></td><td><h6 class="margin-lr0">' + data[i].TYPE + '</h6></td><td><center><a class="fa fa-globe fa-2x no-underline pointer" aria-hidden="true" onclick="IfameReport("' + data[i].NAME + '")" data-toggle="modal" data-target="#ModalIfame" ><a></center></td></tr>';
                $(rowItem).data('map_info', data[i]);
                tblShow.row.add($(rowItem));
            } tblShow.draw();
            $("#GatePass").text(passGate);
            $("#PipePass").text(passPipe);

            $("#GateWarning").text(warningGate);
            $("#PipeWarning").text(warningPipe);

            $("#GateAlert").text(alertGate);
            $("#PipeAlert").text(alertPipe);

            $("#GateFlag").text(flagGate);
            $("#PipeFlag").text(flagPipe);

        }

        function showPIE(pStrMode, pListData ) {
            let intAlert = 0;
            let intWarning = 0;
            let intPass = 0;
            for (let i in pListData) {
                let data = pListData[i];

                if (data.TYPE !== pStrMode) {
                    continue;
                }
                switch (data.THRESHOLD) {
                    case "OK":
                        intPass++;
                        break;
                    case "Alert":
                        intAlert++;
                        break;
                    case "Warning":
                        intWarning++;
                        break;
                }
            }
            let dataT = {
                labels: ["Alert", "Warning", "OK"],
                datasets: [{
                    label: "Test Data",
                    data: [intAlert, intWarning, intPass],
                    fill: false,
                    backgroundColor: ["#e74c3c", "#f1c40f", "#16a085", "#e67e22"],
                    hoverBackgroundColor: ["#e74c3c", "#f1c40f", "#16a085", "#e67e22"],
                    borderColor: ["#e74c3c", "#f1c40f", "#16a085", "#e67e22"],
                    borderWidth: 1
                }]
            };
            
            let strIdPie = "";
            let objGraph = null;
            if (pStrMode === "PIPELINE") {
                strIdPie = "#piePipeline";
                objGraph = _graphPipeLine;
            } else if (pStrMode === "GATE") {
                strIdPie = "#pieGate";
                objGraph = _graphGate
            }
            if (objGraph != null) {
                objGraph.destroy();
            }
            let ctx = $(strIdPie).get(0).getContext("2d");
            objGraph = new Chart(ctx, {
                type: 'doughnut',
                data: dataT,
                options: {
                    responsive: true,
                    pieceLabel: { mode: 'value', fontColor: 'white' },
                    title: { display: true },
                    legend: { position: 'bottom' },
                    scales: {
                        xAxes: [{ gridLines: { display: false }, display: false, scaleLabel: { display: false, labelString: '' } }],
                        yAxes: [{ gridLines: { display: false }, display: false, scaleLabel: { display: false, labelString: '' }, ticks: { stepSize: 50, beginAtZero: true } }]
                    },
                }
            });
            objGraph.update();
        }

        var SeRegion;
        var SeLicense;




        function Check() {

            if (document.getElementById('radioRegion').checked) {
                document.getElementById('seRegion').style.display = 'inline-block';
                document.getElementById('seLicense').style.display = 'none';

            }
            else if (document.getElementById('radioLicense').checked) {
                document.getElementById('seLicense').style.display = 'inline-block';
                document.getElementById('seRegion').style.display = 'none';
            }
            if (document.getElementById('radioMonth').checked) {
                document.getElementById('chooseMonth').style.display = 'inline-block';
                document.getElementById('chooseYear').style.display = 'none';
            }
            else if (document.getElementById('radioYear').checked) {
                document.getElementById('chooseMonth').style.display = 'none';
                document.getElementById('chooseYear').style.display = 'inline-block';
            }
        }


        var region;
        $('#MultiRegion').change(function () {
            SeRegion = $(this).val();
            console.log(SeRegion);

        })
        $('#MultiLicense').change(function () {
            SeLicense = $(this).val();
            // console.log(region);

        })
        var map_info_report_json;
        function IfameReport() {
            //consol.log(this);
            //let map_info_report = $(this).data("map_info_report");

            //map_info_report_json = {
            //    "menu": "utilization-report",
            //    "type": map_info_report.TYPE,
            //    "command": "view",
            //    "flag": true,
            //    "flagby": "600426",
            //    "parameter": {
            //        "REGION": "1",
            //        "LICENSE": "",
            //        "NAME": "G0404R2",
            //        "MONTH": "1",
            //        "YEAR": "2018"
            //    }
            //}

            //$('#ModalMapDashboard').modal('show');
            let map_info = $(this).data("map_info");
            console.log(map_info);
            map_dashboard_json = {
                "menu": "dashboard",
                "type": map_info.TYPE,
                "command": "view",
                "flag": $('#flag').val() == 1 ? true : false,
                "flagby": $('#username').val(),
                "parameter": {
                    "REGION": map_info.REGION,
                    "LICENSE": map_info.LICENSE,
                    "NAME": map_info.NAME,
                    "MONTH": map_info.MONTH,
                    "YEAR": map_info.YEAR,
                }
            }
            map_frame.contentWindow.postMessage(map_dashboard_json, '*');
            //map_frame.contentWindow.postMessage(map_info_json, '*');
        }

        //function searcch
        function myFunction() {
            var input, filter, table, tr, td, i;
            input = document.getElementById("txtSearch");
            filter = input.value.toUpperCase();
            table = document.getElementById("utilTbl");
            tr = table.getElementsByTagName("tr");
            for (i = 0; i < tr.length; i++) {
                td = tr[i].getElementsByTagName("td")[1];
                if (td) {
                    if (td.innerHTML.toUpperCase().indexOf(filter) > -1) {
                        tr[i].style.display = "";
                    } else {
                        tr[i].style.display = "none";
                    }
                }
            }
        }



        var
    filters = {
        color: null,
    };



        function updateFilters() {
            $('.rowfil').hide().filter(function () {
                var
                  self = $(this),
                  result = true; // not guilty until proven guilty

                Object.keys(filters).forEach(function (filter) {
                    if (filters[filter] && (filters[filter] != 'all') && (filters[filter] != 'Any')) {
                        result = result && filters[filter] === self.data(filter);
                    }
                });

                return result;
            }).show();
        }

        function changeFilter(filterName) {
            filters[filterName] = this.value;
            updateFilters();
        }

        




        //////////////////////



        Chart.defaults.global.legend.labels.usePointStyle = true;
        Chart.defaults.doughnutLabels = Chart.helpers.clone(Chart.defaults.doughnut);
        var helpers = Chart.helpers;
        var defaults = Chart.defaults;
        $.ajax({
            type: "POST",
            url: "/Utilization/Report_CurrentGate",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (chData) {
                //return;
                //console.log(chData);
                var aData = chData;
                var aLabels = aData[0];
                var aDatasets1 = aData[1];
                var dataT = {
                    labels: aLabels,
                    datasets: [{
                        label: "Test Data",
                        data: aDatasets1,
                        fill: false,
                        backgroundColor: ["#e74c3c", "#f1c40f", "#16a085", "#e67e22"],
                        hoverBackgroundColor: ["#e74c3c", "#f1c40f", "#16a085", "#e67e22"],
                        borderColor: ["#e74c3c", "#f1c40f", "#16a085", "#e67e22"],
                        borderWidth: 1
                    }]
                };
                var ctx = $("#pieGateAll").get(0).getContext("2d");
                _graphAllGate = new Chart(ctx, {
                    type: 'doughnut',
                    data: dataT,
                    options: {
                        responsive: true,
                        pieceLabel: { mode: 'value', fontColor: 'white' },
                        title: { display: true },
                        legend: { position: 'bottom' },
                        scales: {
                            xAxes: [{ gridLines: { display: false }, display: false, scaleLabel: { display: false, labelString: '' } }],
                            yAxes: [{ gridLines: { display: false }, display: false, scaleLabel: { display: false, labelString: '' }, ticks: { stepSize: 50, beginAtZero: true } }]
                        },
                    }
                });
            }
        });

        $.ajax({
            type: "POST",
            url: "/Utilization/Report_CurrentPipeline",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (chData) {
                //return;
                var aData = chData;
                var aLabels = aData[0];
                var aDatasets1 = aData[1];
                var dataT = {
                    labels: aLabels,
                    datasets: [{
                        label: "Test Data",
                        data: aDatasets1,
                        fill: false,
                        backgroundColor: ["#e74c3c", "#f1c40f", "#16a085", "#e67e22"],
                        hoverBackgroundColor: ["#e74c3c", "#f1c40f", "#16a085", "#e67e22"],
                        borderColor: ["#e74c3c", "#f1c40f", "#16a085", "#e67e22"],
                        borderWidth: 1
                    }]
                };
                var ctx = $("#piePipelineAll").get(0).getContext("2d");
                _graphAllPipeLine = new Chart(ctx, {
                    type: 'doughnut',
                    data: dataT,
                    options: {
                        responsive: true,
                        pieceLabel: { mode: 'value', fontColor: 'white' },
                        title: { display: true },
                        legend: { position: 'bottom' },
                        scales: {
                            xAxes: [{ gridLines: { display: false }, display: false, scaleLabel: { display: false, labelString: '' } }],
                            yAxes: [{ gridLines: { display: false }, display: false, scaleLabel: { display: false, labelString: '' }, ticks: { stepSize: 50, beginAtZero: true } }]
                        },
                    }
                });
            }
        });

        //////////////////////////////////////

        //---------Search Region All--------//
        let tblRegionAll = $("#utilTbl").DataTable();
        tblRegionAll.clear()
        $.ajax({
            url: "/Utilization/RegionAllReport",
            type: 'POST',
            contentType: 'application/json; charset=utf-8',
            datatype: 'json',
            success: function (data) {
                //return;
                //$('#utilTbl').find('tbody tr').each(function () {
                //    this.remove();
                //});

                passPipe = 0;
                passGate = 0;
                warningPipe = 0;
                warningGate = 0;
                alertGate = 0;
                alertPipe = 0;
                flagGate = 0;
                flagPipe = 0;
                showUtilTable(data);
                for (let i in data) {
                    if (data[i].THRESHOLD == "OK" && data[i].TYPE == "GATESTATION")
                    { passGate = 1 + passGate; }
                    else if (data[i].THRESHOLD == "OK" && data[i].TYPE == "PIPELINE")
                    { passPipe = 1 + passPipe; }

                    else if (data[i].THRESHOLD == "Warning" && data[i].TYPE == "GATESTATION")
                    { warningGate = 1 + warningGate; }
                    else if (data[i].THRESHOLD == "Warning" && data[i].TYPE == "PIPELINE")
                    { warningPipe = 1 + warningPipe; }

                    else if (data[i].THRESHOLD == "Alert" && data[i].TYPE == "GATESTATION")
                    { alertGate = 1 + alertGate; }
                    else if (data[i].THRESHOLD == "Alert" && data[i].TYPE == "PIPELINE")
                    { alertPipe = 1 + alertPipe; }

                    else if (data[i].THRESHOLD == "Flag" && data[i].TYPE == "GATESTATION")
                    { flagGate = 1 + flagGate; }
                    else if (data[i].THRESHOLD == "Flag" && data[i].TYPE == "PIPELINE")
                    { flagPipe = 1 + flagPipe; }

                    num = 1 + Number(i);
                    if (data[i].TYPE == "PIPELINE")
                    { unit = "ft/s"; }
                    else if (data[i].TYPE == "GATESTATION")
                    { unit = "%"; }
                    if (document.getElementById('radioMonth').checked) {
                        dataMonthYear = data[i].MONTH + '/' + data[i].YEAR;
                    }
                    else if (document.getElementById('radioYear').checked)
                    { dataMonthYear = data[i].YEAR; }
                    if (document.getElementById('radioMonth').checked) {
                        dataMonthYear = data[i].MONTH + '/' + data[i].YEAR;
                    }
                    else if (document.getElementById('radioYear').checked)
                    { dataMonthYear = data[i].YEAR; }

                    //console.log('color1' + color1);
                    //console.log('data' + data[i].NO);
                    var unit = "";
                    num = 1 + Number(i);
                    if (data[i].TYPE == "PIPELINE")
                    { unit = "ft/s"; }
                    else if (data[i].TYPE == "GATESTATION")
                    { unit = "%"; }
                    if (document.getElementById('radioMonth').checked) {
                        dataMonthYear = data[i].MONTH + '/' + data[i].YEAR;
                    }
                    else if (document.getElementById('radioYear').checked)
                    { dataMonthYear = data[i].YEAR; }

                    //var rowItemRegionAll = '<tr id="' + data[i].NO + '" class="rowfil" ><td><h6 class="margin-lr0">' + num + '</h6></td><td><h6 class="margin-lr0">' + data[i].NAME + '</h6></td><td><h6 class="margin-lr0">' + data[i].REGION + '</h6></td><td><h6 class="margin-lr0">' + data[i].LICENSE + '</h6></td><td><h6 class="margin-lr0">' + data[i].VALUE + ' ' + unit + '</h6></td><td><h6 class="margin-lr0">' + data[i].THRESHOLD + '</h6></td><td><h6 class="margin-lr0">' + dataMonthYear + '</h6></td><td><h6 class="margin-lr0">' + data[i].TYPE + '</h6></td><td><center><a class="fa fa-globe fa-2x no-underline pointer" aria-hidden="true" data-toggle="modal" data-target="#ModalIfame" ><a></center></td></tr>';
                    //tblRegionAll.row.add($(rowItemRegionAll));
                    //$('#utilTbl > tbody >tr >td >a:last-child').data('map_info_report', data[i]);
                    //$('#utilTbl > tbody >tr >td >a:last-child').click(IfameReport);

                    //$('#utilTbl > tbody:last-child').append('<tr id="' + data[i].NO + '" class="rowfil" data-color="' + color1 + '" data-type="' + data[i].TYPE + '"><td><h6 class="margin-lr0">' + num + '</h6></td><td><h6 class="margin-lr0">' + data[i].NAME + '</h6></td><td><h6 class="margin-lr0">' + data[i].VALUE + ' %</h6></td><td><h6 class="margin-lr0">' + data[i].COLOR + '</h6></td><td><h6 class="margin-lr0">' + dataMonthYear + '</h6></td><td><h6 class="margin-lr0">' + data[i].COLOR + '</h6></td></tr>');
                }
                //tblRegionAll.draw();
                $("#GatePass").text(passGate);
                $("#PipePass").text(passPipe);

                $("#GateWarning").text(warningGate);
                $("#PipeWarning").text(warningPipe);

                $("#GateAlert").text(alertGate);
                $("#PipeAlert").text(alertPipe);

                $("#GateFlag").text(flagGate);
                $("#PipeFlag").text(flagPipe);

                $("#Current_GatePass").text(passGate);
                $("#Current_PipePass").text(passPipe);

                $("#Current_GateWarning").text(warningGate);
                $("#Current_PipeWarning").text(warningPipe);

                $("#Current_GateAlert").text(alertGate);
                $("#Current_PipeAlert").text(alertPipe);

                $("#Current_GateFlag").text(flagGate);
                $("#Current_PipeFlag").text(flagPipe);
            },
            error: function (result) {
                alert('Please select the data');
            }
        });


    //-----------------[ New Search ]---------------------//

        function VIEW_GATE_PIPE_REPORT_CURRENT(pType, pArrId) {
            var param = {
                pType: pType,
                pArrId: pArrId
            };
            
            var strUrl = "@Url.Action("VIEW_GATE_PIPE_REPORT_CURRENT")";
            $.post(strUrl, param, function (data2) {
                
                passPipe = 0;
                passGate = 0;
                warningPipe = 0;
                warningGate = 0;
                alertGate = 0;
                alertPipe = 0;
                flagGate = 0;
                flagPipe = 0;
                var data = data2.Result;
                showAllPIE("PIPELINE", data);
                showAllPIE("GATESTATION", data);
                for (let i in data) {
                    if (data[i].THRESHOLD == "OK" && data[i].TYPE == "GATESTATION")
                    { passGate = 1 + passGate; }
                    else if (data[i].THRESHOLD == "OK" && data[i].TYPE == "PIPELINE")
                    { passPipe = 1 + passPipe; }

                    else if (data[i].THRESHOLD == "Warning" && data[i].TYPE == "GATESTATION")
                    { warningGate = 1 + warningGate; }
                    else if (data[i].THRESHOLD == "Warning" && data[i].TYPE == "PIPELINE")
                    { warningPipe = 1 + warningPipe; }

                    else if (data[i].THRESHOLD == "Alert" && data[i].TYPE == "GATESTATION")
                    { alertGate = 1 + alertGate; }
                    else if (data[i].THRESHOLD == "Alert" && data[i].TYPE == "PIPELINE")
                    { alertPipe = 1 + alertPipe; }

                    else if (data[i].THRESHOLD == "Flag" && data[i].TYPE == "GATESTATION")
                    { flagGate = 1 + flagGate; }
                    else if (data[i].THRESHOLD == "Flag" && data[i].TYPE == "PIPELINE")
                    { flagPipe = 1 + flagPipe; }

                    num = 1 + Number(i);
                    

                    }
                
                $("#GatePass").text(passGate);
                $("#PipePass").text(passPipe);

                $("#GateWarning").text(warningGate);
                $("#PipeWarning").text(warningPipe);

                $("#GateAlert").text(alertGate);
                $("#PipeAlert").text(alertPipe);

                $("#GateFlag").text(flagGate);
                $("#PipeFlag").text(flagPipe);

                $("#Current_GatePass").text(passGate);
                $("#Current_PipePass").text(passPipe);

                $("#Current_GateWarning").text(warningGate);
                $("#Current_PipeWarning").text(warningPipe);

                $("#Current_GateAlert").text(alertGate);
                $("#Current_PipeAlert").text(alertPipe);

                $("#Current_GateFlag").text(flagGate);
                $("#Current_PipeFlag").text(flagPipe);
            });
        }

    var _graphAllPipeLine = null;
    var _graphAllGate = null;

    function showAllPIE(pStrMode, pListData) {
        let intAlert = 0;
        let intWarning = 0;
        let intPass = 0;
        for (let i in pListData) {
            let data = pListData[i];

            if (data.TYPE !== pStrMode) {
                continue;
            }
            switch (data.THRESHOLD) {
                case "OK":
                    intPass++;
                    break;
                case "Alert":
                    intAlert++;
                    break;
                case "Warning":
                    intWarning++;
                    break;
            }
        }
        var arrData = [intAlert, intWarning, intPass];
        console.log(arrData);
        let dataT = {
            labels: ["Alert", "Warning", "OK"],
            datasets: [{
                label: "Test Data",
                data: arrData,
                fill: false,
                backgroundColor: ["#e74c3c", "#f1c40f", "#16a085", "#e67e22"],
                hoverBackgroundColor: ["#e74c3c", "#f1c40f", "#16a085", "#e67e22"],
                borderColor: ["#e74c3c", "#f1c40f", "#16a085", "#e67e22"],
                borderWidth: 1
            }]
        };
        console.log(dataT);
        let strIdPie = "";
        let objGraph = null;
        if (pStrMode === "PIPELINE") {
            strIdPie = "#piePipelineAll";
            objGraph = _graphAllPipeLine;
        } else if (pStrMode === "GATESTATION") {
            strIdPie = "#pieGateAll";
            objGraph = _graphAllGate
        }
        if (objGraph != null) {            
            objGraph.destroy();
        }
        let ctx = $(strIdPie).get(0).getContext("2d");
        objGraph = new Chart(ctx, {
            type: 'doughnut',
            data: dataT,
            options: {
                responsive: true,
                pieceLabel: { mode: 'value', fontColor: 'white' },
                title: { display: true },
                legend: { position: 'bottom' },
                scales: {
                    xAxes: [{ gridLines: { display: false }, display: false, scaleLabel: { display: false, labelString: '' } }],
                    yAxes: [{ gridLines: { display: false }, display: false, scaleLabel: { display: false, labelString: '' }, ticks: { stepSize: 50, beginAtZero: true } }]
                },
            }
        });
        if (pStrMode === "PIPELINE") {            
            _graphAllPipeLine = objGraph;
        } else if (pStrMode === "GATESTATION") {            
            _graphAllGate = objGraph;
        }
        objGraph.update();
    }

    //VIEW_GATE_PIPE_REPORT_CURRENT("Region", $("#MultiRegion").val());
</script>