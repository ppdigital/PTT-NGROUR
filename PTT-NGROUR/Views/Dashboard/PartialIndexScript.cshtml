@model PTT_NGROUR.Models.ViewModel.ModelUtilization
@{
    PTT_NGROUR.Models.User users = new PTT_NGROUR.Models.User();
    @Html.Hidden("username", users.Username);
    @Html.Hidden("flag", users.Roleid);
}
@*<script src="~/Scripts/jquery-3.3.1.min.js"></script>*@

<!-- jQuery library -->
@*<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>*@

<!-- Latest compiled JavaScript -->
@*<script src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>*@
<script>

    var _graphPipeLine = null;

    var _graphGate = null;   
    var SeRegion = [ @Model.ListRegion.Select(x=> x.REGION_ID.ToString()).Aggregate((x,y)=> x+ ","+y) ];
    function Search() {
        
        let url;
       
        let multidata;
        let strMode = "";
        if (document.getElementById('radioRegion').checked) {
            url = '@Url.Action("SearchRegion")';            
            multidata = SeRegion;
            strMode = "region";
        }
        else if (document.getElementById('radioLicense').checked) {
            url = '@Url.Action("SearchLicense")';            
            multidata = SeLicense;
            strMode = "license";
        }
        
        $.ajax({
            url: url,
            type: 'POST',
            data: JSON.stringify(multidata),
            contentType: 'application/json; charset=utf-8',
            datatype: 'json',
            success: function (data) {                
                showPIE("PIPELINE", data);
                showPIE("GATESTATION", data);
                showUtilTable(data);
            },
            error: function (result) {
                alert('Please select the data');
            }
        });
    }

    function showUtilTable(data){
        $('#utilTbl').find('tbody tr').each(function () {
            this.remove();
        });
        for (let i in data) {
            if (data[i].THRESHOLD == 'Pass') {
                THRESHOLD = '<span class="fa fa-circle " style="color:#16a085"></span>'
                color1 = "green"
            } else if (data[i].THRESHOLD == 'Warning') {
                THRESHOLD = '<span class="fa fa-circle " style="color:#f1c40f"></span>'
                color1 = "yellow"
            } else if (data[i].THRESHOLD == 'Alert') {
                THRESHOLD = '<span class="fa fa-circle " style="color:#e74c3c"></span>'
                color1 = "red"
            } else if (data[i].FLAG == '1') {
                THRESHOLD = '<span class="fa fa-flag " style="color:#e67e22"></span>'
                color1 = "flag"
            } else {
                THRESHOLD = "";
                color1 = "no"
            }
            if (data[i].STATUS == 'INACTIVE' && data[i].TYPE == 'METERING') {
                status = 'style="color:red"';
            } else {
                status = "";
            }

            if (data[i].TYPE == 'METERING') {

                if (data[i].ID == "") {
                    name = "" + data[i].NAME;
                    value = data[i].OBJ_TYPE;
                } else {
                    name = "" + data[i].NAME + " (" + data[i].ID + ")";
                    value = data[i].OBJ_TYPE;
                }

            } else {
                name = data[i].NAME;
                if (data[i].TYPE == 'PIPELINE') {
                    value = data[i].VALUE + " ft/s";
                } else if (data[i].TYPE == 'GATESTATION') {
                    value = data[i].VALUE + " %";
                }

            }

            $('#utilTbl > tbody:last-child').append('<tr id="' + data[i].NO + '" class="rowfil pointer" data-color="' + color1 + '" data-type="' + data[i].TYPE + '" ' + status + '><td><h6 class="margin-lr0">' + THRESHOLD + '</h6></td><td><h6 class="margin-lr0">' + name + '</h6></td><td><h6 class="margin-lr0">' + value + '</h6></td><td><h6 class="margin-lr0">' + data[i].TYPE + '</h6></td></tr>');
            $('#utilTbl > tbody >tr:last-child').data('map_info', data[i]);
            $('#utilTbl > tbody >tr:last-child').click(utilTblOnclick);
        }
    }

    function utilTblOnclick() {
        $('#ModalMapDashboard').modal('show');
        let map_info = $(this).data("map_info");
        map_dashboard_json = {
            "menu": "dashboard",
            "type": map_info.TYPE,
            "command": "view",
            "flag": $('#flag').val() == 1 ? true : false,
            "flagby": $('#username').val(),
            "parameter": {
                "REGION": map_info.REGION,
                "LICENSE": map_info.LICENSE,
                "NAME": map_info.NAME,
                "MONTH": map_info.MONTH,
                "YEAR": map_info.YEAR,
            }
        }
        map_frame.contentWindow.postMessage(map_dashboard_json, '*');
    }

    function showPIE(pStrMode, pListData) {

        let strIdPie = "";
        let objGraph = null;
        if (pStrMode === "PIPELINE") {
            strIdPie = "#piePipeline";
            objGraph = _graphPipeLine;
        } else if (pStrMode === "GATESTATION") {
            strIdPie = "#pieGate";
            objGraph = _graphGate
        }
        if (objGraph != null) {
            objGraph.destroy();
        }
        //if (!pListData || !pListData.length) {
        //    return;
        //}
        let intAlert = 0;
        let intWarning = 0;
        let intPass = 0;
        for (let i in pListData) {
            let data = pListData[i];

            if (data.TYPE !== pStrMode) {
                continue;
            }
            switch (data.THRESHOLD) {
            case "Pass":
                intPass++;
                break;
            case "Alert":
                intAlert++;
                break;
            case "Warning":
                intWarning++;
                break;
            }            
        }        
        let dataT = {
            labels: ["Alert", "Warning", "Pass"],
            datasets: [{
                label: "Test Data",
                data: [intAlert, intWarning, intPass],
                fill: false,
                backgroundColor: ["#e74c3c", "#f1c40f", "#16a085", "#e67e22"],
                hoverBackgroundColor: ["#e74c3c", "#f1c40f", "#16a085", "#e67e22"],
                borderColor: ["#e74c3c", "#f1c40f", "#16a085", "#e67e22"],
                borderWidth: 1
            }]
        };

        
        let ctx = $(strIdPie).get(0).getContext("2d");
        objGraph = new Chart(ctx, {
            type: 'doughnut',
            data: dataT,
            options: {
                responsive: true,
                pieceLabel: { mode: 'value', fontColor: 'white' },
                title: { display: true },
                legend: { position: 'bottom' },
                scales: {
                    xAxes: [{ gridLines: { display: false }, display: false, scaleLabel: { display: false, labelString: '' } }],
                    yAxes: [{ gridLines: { display: false }, display: false, scaleLabel: { display: false, labelString: '' }, ticks: { stepSize: 50, beginAtZero: true } }]
                },
            }
        });
        if (pStrMode === "PIPELINE") {            
            _graphPipeLine = objGraph;
        } else if (pStrMode === "GATESTATION") {
            _graphGate = objGraph;
        }
        objGraph.update();
    }

    Search();

</script>