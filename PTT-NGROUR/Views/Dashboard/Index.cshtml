<!DOCTYPE html>
@model PTT_NGROUR.Models.ViewModel.ModelUtilization
@{
    ViewBag.Title = "Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<meta name="apple-mobile-web-app-capable" content="yes">
<meta name="mobile-web-app-capable" content="yes">
<style>
    .tableFixHead {
        overflow-y: auto;
        height: 300px;
    }

    table {
        border-collapse: collapse;
        width: 100%;
    }

    th {
        background: white;
    }

    .accordion {
        background-color: #d9edf7;
        color: #31708f;
        cursor: pointer;
        padding: 10px;
        width: 100%;
        border: none;
        text-align: left;
        outline: none;
        font-size: 15px;
        transition: 0.4s;
    }

        .active, .accordion:hover {
            background-color: #bce8f1;
        }

        .accordion:after {
            content: '\002B';
            color: #777;
            font-weight: bold;
            float: right;
            margin-left: 5px;
        }

    .active:after {
        content: "\2212";
    }

    .panel {
        padding: 0 18px;
        background-color: white;
        max-height: 0;
        overflow: hidden;
        transition: max-height 0.2s ease-out;
        margin-bottom: 5px !important;
        border: none;
    }
</style>
<link href="~/Scripts/bootstrap-select-1.12.4/dist/css/bootstrap-select.min.css" rel="stylesheet" />
<div class="container-fluid ph0-xs pb2">

    @Html.Partial("PartialSearch")

    <br />
    @Html.Partial("PartialUtilization")

    <br />
    @Html.Partial("PartialOM")

    <br />
    @Html.Partial("PartialRiskManagement")
</div>


<!--Modal View Meter -->
<div id="ModalMapDashboard" class="modal" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel" aria-hidden="true">
    <div class=" modal-lg w-98p5 h-98p5 center mt-9px">
        <div class="modal-content h-98p5" style="padding: 10px">
            <div class="modal-header" style="border-bottom:0px;padding:0px">

                <button type="button" class="close close_create" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
            </div>

            <div class="  black-80 center h-97" style="border: 1px solid #808080;">
                <iframe src="@System.Web.Configuration.WebConfigurationManager.AppSettings["DashboardMap"]" style="min-height: 100% !important; width: 100% !important; border-width: 0px" id="map_frame"></iframe>
            </div>
            <br />
        </div>
    </div>
</div>

@section scripts{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.3/Chart.min.js" type="text/javascript"></script>
    @*<script src="~/Scripts/Chart/Chart.js"></script>*@
    <script src="~/Scripts/Chart/Chart.PieceLabel.min.js"></script>
    <script src="~/Scripts/Chart/chartjs-chart-radial-gauge/Chart.RadialGauge.umd.js"></script>
    <script src="~/Scripts/bootstrap-select-1.12.4/dist/js/bootstrap-select.min.js"></script>
    @*<script src="~/Scripts/bootstrap.min.js"></script>*@
    @Html.Partial("PartialIndexScript")
    @Html.Partial("PartialSearchScript")
    @Html.Partial("PartialUtilizationScript")
    @Html.Partial("PartialOMScript")
    @Html.Partial("PartialRiskManagementScript")

    <script type="text/javascript">
        function accordionToggle(e) {
            if (e.style.maxHeight) {
                e.style.maxHeight = null;
            } else {
                e.style.maxHeight = e.scrollHeight + "px";
            }
        }

        document.getElementById("uAcc").classList.toggle("active");
        accordionToggle(document.getElementById("uAcc").nextElementSibling);

        var accordion = document.getElementsByClassName("accordion");
        var i;

        for (i = 0; i < accordion.length; i++) {
            accordion[i].addEventListener("click", function () {
                this.classList.toggle("active");
                accordionToggle(this.nextElementSibling);
            });
        }

        $('.tableFixHead').on('scroll', function () {
            $('thead', this).css('transform', 'translateY(' + this.scrollTop + 'px)');
        });
        var SeRegion = $('#MultiRegion').val();
        var SeLicense = $('#MultiLicense').val();
        $(document).ready(function () {
            document.getElementById('seLicense').style.display = 'none';
            //$('#MultiRegion').selectpicker('selectAll').selectpicker('refresh');
        });

        function Check() {

            if (document.getElementById('radioRegion').checked) {
                document.getElementById('seRegion').style.display = 'inline-block';
                document.getElementById('seLicense').style.display = 'none';

            }
            else if (document.getElementById('radioLicense').checked) {
                document.getElementById('seLicense').style.display = 'inline-block';
                document.getElementById('seRegion').style.display = 'none';
            }
        }

        $(document).ready(function () {
            Check();

            $('#MultiRegion').change(function () {
                SeRegion = $(this).val();
            })
            $('#MultiLicense').change(function () {
                SeLicense = $(this).val();
            })
        });

        //Sort Table Value//
        $('#headValue').click(function () {
            var table = $(this).parents('table').eq(0)
            var rows = table.find('tr:gt(0)').toArray().sort(comparer($(this).index()))
            this.asc = !this.asc
            if (!this.asc) {

                rows = rows.reverse()


            }


            // console.log(rows.length);
            for (var i = 0; i < rows.length; i++) { table.append(rows[i]) }
        })
        function comparer(index) {
            return function (a, b) {
                var valA = getCellValue(a, index), valB = getCellValue(b, index)
                return $.isNumeric(valA) && $.isNumeric(valB) ? valA - valB : valA.toString().localeCompare(valB)

            }
        }
        function getCellValue(row, index) { return $(row).children('td').eq(index).text() }



        



    </script>
    <script>
        Chart.defaults.global.legend.labels.usePointStyle = true;
        Chart.defaults.doughnutLabels = Chart.helpers.clone(Chart.defaults.doughnut);
        var helpers = Chart.helpers;
        var defaults = Chart.defaults;

    </script>
    @*<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>*@
}
