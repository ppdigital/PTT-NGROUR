<script type="text/javascript">

    @foreach (var thresholdG in Model.ListThresholdGate)
    {
        <text>
       
    if ('Alert' == '@thresholdG.THRESHOLD_NAME') {
        $("#GMinAlert").text(@thresholdG.MINVAL);
        $("#GMaxAlert").text(@thresholdG.MAXVAL);
    }
    else if ('Warning'== '@thresholdG.THRESHOLD_NAME') {
        $("#GMinWarning").text(@thresholdG.MINVAL);
        $("#GMaxWarning").text(@thresholdG.MAXVAL);
    }
    else if ('OK'== '@thresholdG.THRESHOLD_NAME') {
        $("#GMinOK").text(@thresholdG.MINVAL);
        $("#GMaxOK").text(@thresholdG.MAXVAL);
    }
    else { }
    </text>
    }

    @foreach (var thresholdP in Model.ListThresholdPipe)
    {
        <text>
       
    if ('Alert' == '@thresholdP.THRESHOLD_NAME') {
        $("#PMinAlert").text(@thresholdP.MINVAL);
        $("#PMaxAlert").text(@thresholdP.MAXVAL);
    }
    else if ('Warning'== '@thresholdP.THRESHOLD_NAME') {
        $("#PMinWarning").text(@thresholdP.MINVAL);
        $("#PMaxWarning").text(@thresholdP.MAXVAL);
    }
    else if ('OK'== '@thresholdP.THRESHOLD_NAME') {
        $("#PMinOK").text(@thresholdP.MINVAL);
        $("#PMaxOK").text(@thresholdP.MAXVAL);
    }
    else{}
    </text>
    }

    const _strGate = "GATESTATION";
    const _strPipe = "PIPELINE";
    const _strOk = "OK";
    const _strWarning = "Warning";
    const _strAlert = "Alert";
    const _strFlag = "Flag";

    var _isFirstSearch = true;

    jQuery.ajaxSettings.traditional = true;

        $('#Month-filter').datepicker({
            format: "m/yyyy",
            viewMode: "months",
            minViewMode: "months",
            autoclose: true,
            inline: true,
        }).datepicker("setDate", new Date());

        $("#Year-filter").datepicker({
            format: "yyyy",
            viewMode: "years",
            minViewMode: "years",
            autoclose: true
        }).datepicker("setDate", new Date());
        $(function () {
        });


        $(document).ready(function () {
            document.getElementById('seLicense').style.display = 'none';
            document.getElementById('seMY').style.display = 'none';
            document.getElementById('pieRight').style.display = 'none';
            document.getElementById('tblSearchGate').style.display = 'none';
            document.getElementById('tblSearchPipe').style.display = 'none';
            $('#MultiRegion').selectpicker('selectAll');
            //document.getElementById('chooseYear').style.display = 'none';
            /*if (document.getElementById('radioMonth').checked) {
                document.getElementById('chooseMonth').style.display = 'inline-block';
                document.getElementById('chooseYear').style.display = 'none';
            }
            else if (document.getElementById('radioYear').checked) {
                document.getElementById('chooseMonth').style.display = 'none';
                document.getElementById('chooseYear').style.display = 'inline-block';
            }
            else {
                document.getElementById('chooseMonth').style.display = 'none';
                document.getElementById('chooseYear').style.display = 'none';
            } */
           

        });

    //------Check Compare ---//
        function CheckCompare() {
            if (document.getElementById('checkCompare').checked == true) {
                document.getElementById('btnCurrentSearch').style.display = 'none';
                document.getElementById('seMY').style.display = 'block';
                document.getElementById('pieRight').style.display = 'block';
                $("#layoutLeft").removeClass("col-lg-12").addClass("col-lg-6");
              
                $("#thresGY").addClass("row");
                $("#thresRO").addClass("row");
                $(".changecolThres").removeClass("col-lg-3 ").addClass("col-lg-6 col-md-6");
                document.getElementById('tblCurrentGate').style.display = 'none';
                document.getElementById('tblCurrentPipe').style.display = 'none';
                document.getElementById('tblSearchGate').style.display = 'block';
                document.getElementById('tblSearchPipe').style.display = 'block';

            }
            else if (document.getElementById('checkCompare').checked == false) {
                document.getElementById('btnCurrentSearch').style.display = 'block'
                document.getElementById('seMY').style.display = 'none';
                document.getElementById('pieRight').style.display = 'none';
                $("#layoutLeft").removeClass("col-lg-6").addClass("col-lg-12");
                $("#thresGY").removeClass("row");
                $("#thresRO").removeClass("row");
                $(".changecolThres").removeClass("col-lg-6 col-md-6").addClass("col-lg-3 ");
                document.getElementById('tblCurrentGate').style.display = 'block';
                document.getElementById('tblCurrentPipe').style.display = 'block';
                document.getElementById('tblSearchGate').style.display = 'none';
                document.getElementById('tblSearchPipe').style.display = 'none';

            }
           
        }
       
       /* var tblOption = {
            buttons: [
               {
                   extend: 'excel',
                   text: 'Save current page',
                   exportOptions: {
                       modifier: {
                           page: 'current'
                       }
                   }
               }
            ]
        }; */

        
        var tblOptionReport = $('#searchTblGate').DataTable({
            
          
            dom: 'lBfrtip',
            dom:
    "<'row'<'col-sm-3'l><'col-sm-6 text-center'B><'col-sm-3'f>>" +
    "<'row'<'col-sm-12'tr>>" +
    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
            buttons: [
                {
                    "extend": 'copy',
                    "exportOptions": { columns: [ 1, 2, 3, 4, 5, 6, 7] }
                },
                {
                    "extend": 'csv',
                    "exportOptions": { columns: [0, 1, 2, 3, 4, 5, 6, 7] }
                },
                {
                    "extend": 'excel',
                    "exportOptions": { columns: [0, 1, 2, 3, 4, 5, 6, 7] }
                },
               {
                   "extend": 'pdfHtml5',
                   "exportOptions": { columns: [0, 1, 2, 3, 4, 5, 6, 7] },
                   "text": 'PDF',
                   "pageSize": 'A4',
                   "customize": function (doc) {
                       doc.defaultStyle = {
                           font: 'THSarabun',
                           fontSize: 16,
                       };
                   }
               },

               {
                   "extend": 'print',
                   "exportOptions": { columns: [0, 1, 2, 3] }
               }
            ]


        });
        var tblOptionReport = $('#searchTblPipe').DataTable({


            dom: 'lBfrtip',
            dom:
    "<'row'<'col-sm-3'l><'col-sm-6 text-center'B><'col-sm-3'f>>" +
    "<'row'<'col-sm-12'tr>>" +
    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
            buttons: [
                {
                    "extend": 'copy',
                    "exportOptions": { columns: [1, 2, 3, 4, 5, 6, 7] }
                },
                {
                    "extend": 'csv',
                    "exportOptions": { columns: [0, 1, 2, 3, 4, 5, 6, 7] }
                },
                {
                    "extend": 'excel',
                    "exportOptions": { columns: [0, 1, 2, 3, 4, 5, 6, 7] }
                },
               {
                   "extend": 'pdfHtml5',
                   "exportOptions": { columns: [0, 1, 2, 3, 4, 5, 6, 7] },
                   "text": 'PDF',
                   "pageSize": 'A4',
                   "customize": function (doc) {
                       doc.defaultStyle = {
                           font: 'THSarabun',
                           fontSize: 16,
                       };
                   }
               },

               {
                   "extend": 'print',
                   "exportOptions": { columns: [0, 1, 2, 3] }
               }
            ]


        });
       
        var tblOptionReportCurrentGate = $('#currentTblGate').DataTable({
           
           
            dom: 'lBfrtip',
            dom:
    "<'row'<'col-sm-3'l><'col-sm-6 text-center'B><'col-sm-3'f>>" +
    "<'row'<'col-sm-12'tr>>" +
    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
            buttons: [
                {
                    "extend": 'copy',
                    "exportOptions": { columns: [1, 2, 3, 4, 5, 6, 7] }
                },
                {
                    "extend": 'csv',
                    "exportOptions": { columns: [0, 1, 2, 3, 4, 5, 6, 7] }
                },
                {
                    "extend": 'excel',
                    "exportOptions": { columns: [0, 1, 2, 3, 4, 5, 6, 7] }
                },
               {
                   "extend": 'pdfHtml5',
                   "exportOptions": { columns: [0, 1, 2, 3, 4, 5, 6, 7] },
                   "text": 'PDF',
                   "pageSize": 'A4',
                   "customize": function (doc) {
                       doc.defaultStyle = {
                           font: 'THSarabun',
                           fontSize: 16,
                       };
                   }
               },

               {
                   "extend": 'print',
                   "exportOptions": { columns: [0, 1, 2, 3] }
               }
            ]


        });
        var tblOptionReportCurrentPipe = $('#currentTblPipe').DataTable({


            dom: 'lBfrtip',
            dom:
    "<'row'<'col-sm-3'l><'col-sm-6 text-center'B><'col-sm-3'f>>" +
    "<'row'<'col-sm-12'tr>>" +
    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
            buttons: [
                {
                    "extend": 'copy',
                    "exportOptions": { columns: [1, 2, 3, 4, 5, 6, 7] }
                },
                {
                    "extend": 'csv',
                    "exportOptions": { columns: [0, 1, 2, 3, 4, 5, 6, 7] }
                },
                {
                    "extend": 'excel',
                    "exportOptions": { columns: [0, 1, 2, 3, 4, 5, 6, 7] }
                },
               {
                   "extend": 'pdfHtml5',
                   "exportOptions": { columns: [0, 1, 2, 3, 4, 5, 6, 7] },
                   "text": 'PDF',
                   "pageSize": 'A4',
                   "customize": function (doc) {
                       doc.defaultStyle = {
                           font: 'THSarabun',
                           fontSize: 16,
                       };
                   }
               },

               {
                   "extend": 'print',
                   "exportOptions": { columns: [0, 1, 2, 3] }
               }
            ]


        });
        pdfMake.fonts = {
            THSarabun: {
                normal: 'THSarabun.ttf',
                bold: 'THSarabun-Bold.ttf',
                italics: 'THSarabun-Italic.ttf',
                bolditalics: 'THSarabun-BoldItalic.ttf'
            }
        }
        $('.dataTables_length').addClass('bs-select');
        var _graphPipeLine = null;

        var _graphGate = null;

        const monthNames = ["January", "February", "March", "April", "May", "June",
            "July", "August", "September", "October", "November", "December"
        ];

        function getHeaderDate() {
            var datNow = new Date();
            var strMonthName = monthNames[datNow.getMonth()];
            var strYear = datNow.getFullYear();
            return strMonthName + " " + strYear;
        }
        $("#lblLeftDate").text("");
        $("#LeftDate").text("");
        $("#lblRightDate").text("");
        $("#RightDate").text("");

    //var datamonth = month;
       

        function Search() {
            
            let url;
            var threshold = document.getElementById('threshold-filter').value;
            var type = document.getElementById('type-filter').value;
           
            // var datet = $('#Month-filter').val();
           
            //if (document.getElementById('radioMonth').checked && $('#Month-filter').datepicker('getDate') != null) {
                if (document.getElementById('chooseMonth').value != "") {
                    var date = $('#Month-filter').datepicker('getDate'),
                          month = date.getMonth() + 1,
                          year = date.getFullYear();
                }

           // }
          /*  else if (document.getElementById('radioYear').checked && $('#Year-filter').datepicker('getDate') != null) {
                if (document.getElementById('chooseYear').value != "") {
                    var date = $('#Year-filter').datepicker('getDate'),
                         year = date.getFullYear();
                    var month = "null";
                }
               
            } */
            else { var month = "null"; var year = "null"; }

          
          
            let multidata;
            let strMode = "";

            if (document.getElementById('radioRegion').checked) {
                if (document.getElementById('MultiRegion').value == "") {
                    alert('Please select the data');
                    return false;
                }
                url = '@Url.Action("SearchRegionReport")';
                multidata = $('#MultiRegion').val();//SeRegion;
                strMode = "region";

            }
            else if (document.getElementById('radioLicense').checked) {
                if (document.getElementById('MultiLicense').value == "") {
                    alert('Please select the data');
                    return false;
                }
                url = '@Url.Action("SearchLicenseReport")';
                multidata = $('#MultiLicense').val();//SeLicense;
                strMode = "license";
            }
            var multidataAll = {
                Threshold: threshold,
                Type: type,
                Month: month,
                Year: year,
                MultiData: multidata
            }

            $("#lblRightDate").text("");
            $("#RightDate").text("");
            $.ajax({
                url: url,
                type: 'POST',
                data: JSON.stringify(multidataAll),
                contentType: 'application/json; charset=utf-8',
                datatype: 'json',
                success: function (data) {                    
                    showPIE("PIPELINE", data);
                    showPIE("GATESTATION", data);
                    showUtilTable(data);
                    var strMonth = monthNames[month - 1];
                    if (!strMonth) {
                        strMonth = "";
                    }
                    $("#lblRightDate").text(strMonth + " " + year);
                    $("#RightDate").text(strMonth + " " + year);
                },
                error: function (result) {
                    alert('Please select the data');
                }
            });
            VIEW_GATE_PIPE_REPORT_CURRENT(strMode, multidata);
        }
    


    var _tblData = null;
    
    function showUtilTable(data) {
        _tblData = data;
        
        let tblShowGate;
        let tblShowPipe;
             tblShowGate = $("#searchTblGate").DataTable();
             tblShowGate.clear()
            $('#searchTblGate').find('tbody tr').each(function () {
                this.remove();
            });
            tblShowPipe = $("#searchTblPipe").DataTable();
            tblShowPipe.clear()
            $('#searchTblPipe').find('tbody tr').each(function () {
                this.remove();
            });
            let passPipe = 0;
            let passGate = 0;
            let warningPipe = 0;
            let warningGate = 0;
            let alertGate = 0;
            let alertPipe = 0;
            let flagGate = 0;
            let flagPipe = 0;
            numSearchGate = 0;
            numSearchPipe = 0;
            for (let i in data) {
                var dataItem = data[i];
                if (!dataItem) continue;

                var strThreshold = dataItem.THRESHOLD;
                var strType = dataItem.TYPE;

                if (_strGate === strType) {
                    if (strThreshold === _strOk) {
                        passGate++;
                    } else if (strThreshold === _strWarning) {
                        warningGate++;
                    } else if (strThreshold === _strAlert) {
                        alertGate++;
                    } else if (strThreshold === _strFlag) {
                        flagGate++;
                    }
                } else if (_strPipe === strType) {
                    if (strThreshold === _strOk) {
                        passPipe++;
                    } else if (strThreshold === _strWarning) {
                        warningPipe++;
                    } else if (strThreshold === _strAlert) {
                        alertPipe++;
                    } else if (strThreshold === _strFlag) {
                        flagPipe++;
                    }
                }
                dataMonthYear = data[i].MONTH + '/' + data[i].YEAR;
                
                if (data[i].TYPE == "PIPELINE")
                {
                    numSearchGate++;
                    //unit = "ft/s";
                    var rowItemPipe = '<tr id="' + data[i].NO + '" class="rowfil" ><td><h6 class="margin-lr0">' + numSearchGate + '</h6></td><td><h6 class="margin-lr0">' + data[i].NAME + '</h6></td><td><h6 class="margin-lr0">' + data[i].REGION_NAME + '</h6></td><td><h6 class="margin-lr0">' + data[i].LICENSE_NAME + '</h6></td><td><h6 class="margin-lr0">' + data[i].VALUE + '</h6></td><td><h6 class="margin-lr0">' + data[i].THRESHOLD + '</h6></td><td><h6 class="margin-lr0">' + dataMonthYear + '</h6></td><td><h6 class="margin-lr0">' + data[i].TYPE + '</h6></td><td><center><a href="#" class="clickable fa fa-globe fa-2x no-underline pointer" aria-hidden="true" onfocus="IfameReport(' + i + ')" data-toggle="modal" data-target="#ModalIfame" ><a></center></td></tr>';
                    $(rowItemPipe).data('map_info', data[i]);
                    tblShowPipe.row.add($(rowItemPipe));
                    
                }
                else if (data[i].TYPE == "GATESTATION")
                {
                    numSearchPipe++;
                    //unit = "%";
                    var rowItemGate = '<tr id="' + data[i].NO + '" class="rowfil" ><td><h6 class="margin-lr0">' + numSearchPipe + '</h6></td><td><h6 class="margin-lr0">' + data[i].NAME + '</h6></td><td><h6 class="margin-lr0">' + data[i].REGION_NAME + '</h6></td><td><h6 class="margin-lr0">' + data[i].LICENSE_NAME + '</h6></td><td><h6 class="margin-lr0">' + data[i].VALUE + '</h6></td><td><h6 class="margin-lr0">' + data[i].THRESHOLD + '</h6></td><td><h6 class="margin-lr0">' + dataMonthYear + '</h6></td><td><h6 class="margin-lr0">' + data[i].TYPE + '</h6></td><td><center><a href="#" class="clickable fa fa-globe fa-2x no-underline pointer" aria-hidden="true" onfocus="IfameReport(' + i + ')" data-toggle="modal" data-target="#ModalIfame" ><a></center></td></tr>';
                    $(rowItemGate).data('map_info', data[i]);
                    tblShowGate.row.add($(rowItemGate));
                }
          
                    //if (document.getElementById('radioMonth').checked) {
                       
                    //}
                   // else if (document.getElementById('radioYear').checked)
                    //{ dataMonthYear = data[i].YEAR; }

                   
            }
            $("#GatePass").text(passGate);
            $("#PipePass").text(passPipe);

            $("#GateWarning").text(warningGate);
            $("#PipeWarning").text(warningPipe);

            $("#GateAlert").text(alertGate);
            $("#PipeAlert").text(alertPipe);

            $("#GateFlag").text(flagGate);
            $("#PipeFlag").text(flagPipe);
            tblShowGate.draw();
            tblShowPipe.draw();

    }
    var _tblDataCurrent = null;
   
    function showUtilTableCurrent(data) {
        _tblDataCurrent = data;
        _tblData = _tblDataCurrent;
        let tblShowCurrentGate;
        let tblShowCurrentPipe;

        tblShowCurrentGate = $("#currentTblGate").DataTable();
        tblShowCurrentPipe = $("#currentTblPipe").DataTable();
        tblShowCurrentGate.clear()
        tblShowCurrentPipe.clear()
        $('#currentTblGate').find('tbody tr').each(function () {
                this.remove();
        });
        $('#currentTblPipe').find('tbody tr').each(function () {
            this.remove();
        });
        let current_passPipe = 0;
        let current_passGate = 0;
        let current_warningPipe = 0;
        let current_warningGate = 0;
        let current_alertGate = 0;
        let current_alertPipe = 0;
        let current_flagGate = 0;
        let current_flagPipe = 0;
         numGate = 0;
         numPipe = 0;
        for (let i in data) {
            var dataItemCurrent = data[i];
            if (!dataItemCurrent) continue;

            var strThresholdCurrent = dataItemCurrent.THRESHOLD;
            var strTypeCurrent = dataItemCurrent.TYPE;

            if (_strGate === strTypeCurrent) {
                if (strThresholdCurrent === _strOk) {
                    current_passGate++;
                } else if (strThresholdCurrent === _strWarning) {
                    current_warningGate++;
                } else if (strThresholdCurrent === _strAlert) {
                    current_alertGate++;
                } else if (strThresholdCurrent === _strFlag) {
                    current_flagGate++;
                }
            } else if (_strPipe === strTypeCurrent) {
                if (strThresholdCurrent === _strOk) {
                    current_passPipe++;
                } else if (strThresholdCurrent === _strWarning) {
                    current_warningPipe++;
                } else if (strThresholdCurrent === _strAlert) {
                    current_alertPipe++;
                } else if (strThresholdCurrent === _strFlag) {
                    current_flagPipe++;
                }
            }

            dataMonthYear = data[i].MONTH + '/' + data[i].YEAR;
            
            if (data[i].TYPE == "PIPELINE")
            {
                
                numPipe++;

                var rowItemCurrentPipe = '<tr id="' + data[i].NO + '" class="rowfil" ><td><h6 class="margin-lr0">' + numPipe + '</h6></td><td><h6 class="margin-lr0">' + data[i].NAME + '</h6></td><td><h6 class="margin-lr0">' + data[i].REGION_NAME + '</h6></td><td><h6 class="margin-lr0">' + data[i].LICENSE_NAME + '</h6></td><td><h6 class="margin-lr0">' + data[i].VALUE + '</h6></td><td><h6 class="margin-lr0">' + data[i].THRESHOLD + '</h6></td><td><h6 class="margin-lr0">' + dataMonthYear + '</h6></td><td><h6 class="margin-lr0">' + data[i].TYPE + '</h6></td><td><center><a href="#" class="clickable fa fa-globe fa-2x no-underline pointer" aria-hidden="true" onfocus="IfameReport(' + i + ')" data-toggle="modal" data-target="#ModalIfame" ><a></center></td></tr>';
                //console.log(i);
                //console.log(data[i]);
                $(rowItemCurrentPipe).data('map_info', data[i]);
                tblShowCurrentPipe.row.add($(rowItemCurrentPipe));
            }
            else if (data[i].TYPE == "GATESTATION")
            {
                //console.log(data[i]);
                numGate++;
                var rowItemCurrentGate = '<tr id="' + data[i].NO + '" class="rowfil" ><td><h6 class="margin-lr0">' + numGate + '</h6></td><td><h6 class="margin-lr0">' + data[i].NAME + '</h6></td><td><h6 class="margin-lr0">' + data[i].REGION_NAME + '</h6></td><td><h6 class="margin-lr0">' + data[i].LICENSE_NAME + '</h6></td><td><h6 class="margin-lr0">' + data[i].VALUE + '</h6></td><td><h6 class="margin-lr0">' + data[i].THRESHOLD + '</h6></td><td><h6 class="margin-lr0">' + dataMonthYear + '</h6></td><td><h6 class="margin-lr0">' + data[i].TYPE + '</h6></td><td><center><a href="#" class="clickable fa fa-globe fa-2x no-underline pointer" aria-hidden="true" onfocus="IfameReport(' + i + ')" data-toggle="modal" data-target="#ModalIfame" ><a></center></td></tr>';
                $(rowItemCurrentGate).data('map_info', data[i]);
                //console.log(i);
               // console.log(data[i]);
                tblShowCurrentGate.row.add($(rowItemCurrentGate));
            }
            else {
                rowItemCurrentPipe = '';
                rowItemCurrentGate = '';
            }
            
            
             
          
        }
        $("#Current_GatePass").text(current_passGate);
        $("#Current_PipePass").text(current_passPipe);

        $("#Current_GateWarning").text(current_warningGate);
        $("#Current_PipeWarning").text(current_warningPipe);

        $("#Current_GateAlert").text(current_alertGate);
        $("#Current_PipeAlert").text(current_alertPipe);

        $("#Current_GateFlag").text(current_flagGate);
        $("#Current_PipeFlag").text(current_flagPipe);
        tblShowCurrentGate.draw();
        tblShowCurrentPipe.draw();

    }

        function showPIE(pStrMode, pListData ) {
            let intAlert = 0;
            let intWarning = 0;
            let intOK = 0;
            let intFlag = 0; 
            for (let i in pListData) {
                let data = pListData[i];

                if (data.TYPE !== pStrMode) {
                    continue;
                }
                switch (data.THRESHOLD) {
                    case _strOk:
                        intOK++;
                        break;
                    case _strAlert:
                        intAlert++;
                        break;
                    case _strWarning:
                        intWarning++;
                        break;
                    case _strFlag:
                        intFlag++;
                        break;
                }
            }
            var arrData = [intAlert, intWarning, intOK, intFlag];
            var dsx = [];
            if (!arrData.every(function (x) { return x === 0 })) {
                dsx = [{
                    label: "Test Data",
                    data: arrData,
                    fill: false,
                    backgroundColor: ["#e74c3c", "#f1c40f", "#16a085", "#e67e22"],
                    hoverBackgroundColor: ["#e74c3c", "#f1c40f", "#16a085", "#e67e22"],
                    borderColor: ["#e74c3c", "#f1c40f", "#16a085", "#e67e22"],
                    borderWidth: 1
                }];
            }

            let dataT = {
                labels: ["Alert", "Warning", "OK", "Flag"],
                datasets: dsx
            };

            let strIdPie = "";
            let objGraph = null;
            if (pStrMode === _strPipe) {
                strIdPie = "#piePipeline";
                objGraph = _graphPipeLine;
            } else if (pStrMode === _strGate) {
                strIdPie = "#pieGate";
                objGraph = _graphGate
            }
            if (objGraph != null) {
                objGraph.destroy();
            }
            let ctx = $(strIdPie).get(0).getContext("2d");
            objGraph = new Chart(ctx, {
                type: 'doughnut',
                data: dataT,
                options: {
                    responsive: true,
                    pieceLabel: { mode: 'value', fontColor: 'white' },
                    title: { display: true },
                    legend: { position: 'bottom' },
                    scales: {
                        xAxes: [{ gridLines: { display: false }, display: false, scaleLabel: { display: false, labelString: '' } }],
                        yAxes: [{ gridLines: { display: false }, display: false, scaleLabel: { display: false, labelString: '' }, ticks: { stepSize: 50, beginAtZero: true } }]
                    },
                }
            });
            objGraph.update();
            if (pStrMode === _strPipe) {                
                _graphPipeLine = objGraph;
            } else if (pStrMode === _strGate) {               
                _graphGate = objGraph;
            }
        }

        var SeRegion;
        var SeLicense;




        function Check() {

            if (document.getElementById('radioRegion').checked) {
                document.getElementById('seRegion').style.display = 'inline-block';
                document.getElementById('seLicense').style.display = 'none';

            }
            else if (document.getElementById('radioLicense').checked) {
                document.getElementById('seLicense').style.display = 'inline-block';
                document.getElementById('seRegion').style.display = 'none';
            }
          /*  if (document.getElementById('radioMonth').checked) {
                document.getElementById('chooseMonth').style.display = 'inline-block';
                document.getElementById('chooseYear').style.display = 'none';
            }
            else if (document.getElementById('radioYear').checked) {
                document.getElementById('chooseMonth').style.display = 'none';
                document.getElementById('chooseYear').style.display = 'inline-block';
            } */
        }


        var region;
        $('#MultiRegion').change(function () {
            SeRegion = $(this).val();        
        })
        $('#MultiLicense').change(function () {
            SeLicense = $(this).val();            

        })
        var map_info_report_json;
        
        function IfameReport(pIntIndex) {
            //console.log(pIntIndex);
           // console.log(_tblData);
           
            if (!_tblData === null || !_tblData[pIntIndex]) {
                console.log("ไม่เข้า")
                return;
            }
            let map_info = _tblData[pIntIndex];
            //console.log(map_info)
            
            map_info_report_json = {
                "menu": "utilization-report",
                "type": map_info.TYPE,
                "command": "view",
                "flag": $('#flag').val() === 1,
                "flagby": $('#username').val(),
                "parameter": {
                    "REGION": map_info.REGION,
                    "LICENSE": map_info.LICENSE,
                    "NAME": map_info.NAME,
                    "MONTH": map_info.MONTH,
                    "YEAR": map_info.YEAR,
                }
            }
           // console.log(map_info_report_json);
            map_iframe_report = document.getElementById('map_iframe_report');
            map_iframe_report.contentWindow.postMessage(map_info_report_json, '*');
        }
    
        //function searcch
        function myFunction() {
            var input, filter, table, tr, td, i;
            input = document.getElementById("txtSearch");
            filter = input.value.toUpperCase();
            table = document.getElementById("utilTbl");
            tr = table.getElementsByTagName("tr");
            for (i = 0; i < tr.length; i++) {
                td = tr[i].getElementsByTagName("td")[1];
                if (td) {
                    if (td.innerHTML.toUpperCase().indexOf(filter) > -1) {
                        tr[i].style.display = "";
                    } else {
                        tr[i].style.display = "none";
                    }
                }
            }
        }



        var
    filters = {
        color: null,
    };



        function updateFilters() {
            $('.rowfil').hide().filter(function () {
                var
                  self = $(this),
                  result = true; // not guilty until proven guilty

                Object.keys(filters).forEach(function (filter) {
                    if (filters[filter] && (filters[filter] != 'all') && (filters[filter] != 'Any')) {
                        result = result && filters[filter] === self.data(filter);
                    }
                });

                return result;
            }).show();
        }

        function changeFilter(filterName) {
            filters[filterName] = this.value;
            updateFilters();
        }

        //////////////////////

        $.ajaxx = function (x) {
            console.log(x);
        }

        Chart.defaults.global.legend.labels.usePointStyle = true;
        Chart.defaults.doughnutLabels = Chart.helpers.clone(Chart.defaults.doughnut);
        var helpers = Chart.helpers;
        var defaults = Chart.defaults;
        $.ajaxx({
            type: "POST",
            url: "/Utilization/Report_CurrentGate",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (chData) {
                //return;                
                var aData = chData;
                var aLabels = aData[0];
                var aDatasets1 = aData[1];
                var dataT = {
                    labels: aLabels,
                    datasets: [{
                        label: "Test Data",
                        data: aDatasets1,
                        fill: false,
                        backgroundColor: ["#e74c3c", "#f1c40f", "#16a085", "#e67e22"],
                        hoverBackgroundColor: ["#e74c3c", "#f1c40f", "#16a085", "#e67e22"],
                        borderColor: ["#e74c3c", "#f1c40f", "#16a085", "#e67e22"],
                        borderWidth: 1
                    }]
                };
                var ctx = $("#pieGateAll").get(0).getContext("2d");
                _graphAllGate = new Chart(ctx, {
                    type: 'doughnut',
                    data: dataT,
                    options: {
                        responsive: true,
                        pieceLabel: { mode: 'value', fontColor: 'white' },
                        title: { display: true },
                        legend: { position: 'bottom' },
                        scales: {
                            xAxes: [{ gridLines: { display: false }, display: false, scaleLabel: { display: false, labelString: '' } }],
                            yAxes: [{ gridLines: { display: false }, display: false, scaleLabel: { display: false, labelString: '' }, ticks: { stepSize: 50, beginAtZero: true } }]
                        },
                    }
                });
            }
        });

        $.ajaxx({
            type: "POST",
            url: "/Utilization/Report_CurrentPipeline",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (chData) {
                //return;
                var aData = chData;
                var aLabels = aData[0];
                var aDatasets1 = aData[1];
                var dataT = {
                    labels: aLabels,
                    datasets: [{
                        label: "Test Data",
                        data: aDatasets1,
                        fill: false,
                        backgroundColor: ["#e74c3c", "#f1c40f", "#16a085", "#e67e22"],
                        hoverBackgroundColor: ["#e74c3c", "#f1c40f", "#16a085", "#e67e22"],
                        borderColor: ["#e74c3c", "#f1c40f", "#16a085", "#e67e22"],
                        borderWidth: 1
                    }]
                };
                var ctx = $("#piePipelineAll").get(0).getContext("2d");
                _graphAllPipeLine = new Chart(ctx, {
                    type: 'doughnut',
                    data: dataT,
                    options: {
                        responsive: true,
                        pieceLabel: { mode: 'value', fontColor: 'white' },
                        title: { display: true },
                        legend: { position: 'bottom' },
                        scales: {
                            xAxes: [{ gridLines: { display: false }, display: false, scaleLabel: { display: false, labelString: '' } }],
                            yAxes: [{ gridLines: { display: false }, display: false, scaleLabel: { display: false, labelString: '' }, ticks: { stepSize: 50, beginAtZero: true } }]
                        },
                    }
                });
            }
        });

        //////////////////////////////////////

    //---------Search Region All--------//
        
        let tblRegionAll = $("#utilTbl").DataTable();
        tblRegionAll.clear()
        $.ajaxx({
            url: "/Utilization/RegionAllReport",
            type: 'POST',
            contentType: 'application/json; charset=utf-8',
            datatype: 'json',
            success: function (data) {
                //return;
                //$('#utilTbl').find('tbody tr').each(function () {
                //    this.remove();
                //});

                passPipe = 0;
                passGate = 0;
                warningPipe = 0;
                warningGate = 0;
                alertGate = 0;
                alertPipe = 0;
                flagGate = 0;
                flagPipe = 0;
                showUtilTable(data);
                for (let i in data) {
                    if (data[i].THRESHOLD == "OK" && data[i].TYPE == "GATESTATION")
                    { passGate = 1 + passGate; }
                    else if (data[i].THRESHOLD == "OK" && data[i].TYPE == "PIPELINE")
                    { passPipe = 1 + passPipe; }

                    else if (data[i].THRESHOLD == "Warning" && data[i].TYPE == "GATESTATION")
                    { warningGate = 1 + warningGate; }
                    else if (data[i].THRESHOLD == "Warning" && data[i].TYPE == "PIPELINE")
                    { warningPipe = 1 + warningPipe; }

                    else if (data[i].THRESHOLD == "Alert" && data[i].TYPE == "GATESTATION")
                    { alertGate = 1 + alertGate; }
                    else if (data[i].THRESHOLD == "Alert" && data[i].TYPE == "PIPELINE")
                    { alertPipe = 1 + alertPipe; }

                    else if (data[i].THRESHOLD == "Flag" && data[i].TYPE == "GATESTATION")
                    { flagGate = 1 + flagGate; }
                    else if (data[i].THRESHOLD == "Flag" && data[i].TYPE == "PIPELINE")
                    { flagPipe = 1 + flagPipe; }

                    
                 

                    
                    var unit = "";
                    num = 1 + Number(i);
                  //  if (data[i].TYPE == "PIPELINE")
                   // { unit = "ft/s"; }
                   // else if (data[i].TYPE == "GATESTATION")
                   // { unit = "%"; }
                    //if (document.getElementById('radioMonth').checked) {
                        dataMonthYear = data[i].MONTH + '/' + data[i].YEAR;
                    //}
                   // else if (document.getElementById('radioYear').checked)
                    //{ dataMonthYear = data[i].YEAR; }

                    //var rowItemRegionAll = '<tr id="' + data[i].NO + '" class="rowfil" ><td><h6 class="margin-lr0">' + num + '</h6></td><td><h6 class="margin-lr0">' + data[i].NAME + '</h6></td><td><h6 class="margin-lr0">' + data[i].REGION + '</h6></td><td><h6 class="margin-lr0">' + data[i].LICENSE + '</h6></td><td><h6 class="margin-lr0">' + data[i].VALUE + ' ' + unit + '</h6></td><td><h6 class="margin-lr0">' + data[i].THRESHOLD + '</h6></td><td><h6 class="margin-lr0">' + dataMonthYear + '</h6></td><td><h6 class="margin-lr0">' + data[i].TYPE + '</h6></td><td><center><a class="fa fa-globe fa-2x no-underline pointer" aria-hidden="true" data-toggle="modal" data-target="#ModalIfame" ><a></center></td></tr>';
                    //tblRegionAll.row.add($(rowItemRegionAll));
                    //$('#utilTbl > tbody >tr >td >a:last-child').data('map_info_report', data[i]);
                    //$('#utilTbl > tbody >tr >td >a:last-child').click(IfameReport);

                    //$('#utilTbl > tbody:last-child').append('<tr id="' + data[i].NO + '" class="rowfil" data-color="' + color1 + '" data-type="' + data[i].TYPE + '"><td><h6 class="margin-lr0">' + num + '</h6></td><td><h6 class="margin-lr0">' + data[i].NAME + '</h6></td><td><h6 class="margin-lr0">' + data[i].VALUE + ' %</h6></td><td><h6 class="margin-lr0">' + data[i].COLOR + '</h6></td><td><h6 class="margin-lr0">' + dataMonthYear + '</h6></td><td><h6 class="margin-lr0">' + data[i].COLOR + '</h6></td></tr>');
                }
                //tblRegionAll.draw();
                $("#GatePass").text(passGate);
                $("#PipePass").text(passPipe);

                $("#GateWarning").text(warningGate);
                $("#PipeWarning").text(warningPipe);

                $("#GateAlert").text(alertGate);
                $("#PipeAlert").text(alertPipe);

                $("#GateFlag").text(flagGate);
                $("#PipeFlag").text(flagPipe);

                $("#Current_GatePass").text(passGate);
                $("#Current_PipePass").text(passPipe);

                $("#Current_GateWarning").text(warningGate);
                $("#Current_PipeWarning").text(warningPipe);

                $("#Current_GateAlert").text(alertGate);
                $("#Current_PipeAlert").text(alertPipe);

                $("#Current_GateFlag").text(flagGate);
                $("#Current_PipeFlag").text(flagPipe);
            },
            error: function (result) {
                alert('Please select the data');
            }
        });

        //---------Search Region All Current--------//
        
        let tblCurrentRegionAll = $("#currentTblGate").DataTable();
        tblCurrentRegionAll.clear()
        $.ajaxx( {
            url: "/Utilization/RegionAllReport",
            type: 'POST',
            contentType: 'application/json; charset=utf-8',
            datatype: 'json',
            success: function (data) {
                //return;
                //$('#utilTbl').find('tbody tr').each(function () {
                //    this.remove();
                //});

                passPipe = 0;
                passGate = 0;
                warningPipe = 0;
                warningGate = 0;
                alertGate = 0;
                alertPipe = 0;
                flagGate = 0;
                flagPipe = 0;
                showUtilTable(data);
                for (let i in data) {
                    if (data[i].THRESHOLD == "OK" && data[i].TYPE == "GATESTATION")
                    { passGate = 1 + passGate; }
                    else if (data[i].THRESHOLD == "OK" && data[i].TYPE == "PIPELINE")
                    { passPipe = 1 + passPipe; }

                    else if (data[i].THRESHOLD == "Warning" && data[i].TYPE == "GATESTATION")
                    { warningGate = 1 + warningGate; }
                    else if (data[i].THRESHOLD == "Warning" && data[i].TYPE == "PIPELINE")
                    { warningPipe = 1 + warningPipe; }

                    else if (data[i].THRESHOLD == "Alert" && data[i].TYPE == "GATESTATION")
                    { alertGate = 1 + alertGate; }
                    else if (data[i].THRESHOLD == "Alert" && data[i].TYPE == "PIPELINE")
                    { alertPipe = 1 + alertPipe; }

                    else if (data[i].THRESHOLD == "Flag" && data[i].TYPE == "GATESTATION")
                    { flagGate = 1 + flagGate; }
                    else if (data[i].THRESHOLD == "Flag" && data[i].TYPE == "PIPELINE")
                    { flagPipe = 1 + flagPipe; }

                    num = 1 + Number(i);
                   // if (data[i].TYPE == "PIPELINE")
                    //{ unit = "ft/s"; }
                   // else if (data[i].TYPE == "GATESTATION")
                    //{ unit = "%"; }
                    
                        dataMonthYear = data[i].MONTH + '/' + data[i].YEAR;
                   

                    
                    var unit = "";
                    num = 1 + Number(i);
                    //if (data[i].TYPE == "PIPELINE")
                    //{ unit = "ft/s"; }
                   // else if (data[i].TYPE == "GATESTATION")
                   // { unit = "%"; }
                   // if (document.getElementById('radioMonth').checked) {
                        dataMonthYear = data[i].MONTH + '/' + data[i].YEAR;
                  //  }
                   // else if (document.getElementById('radioYear').checked)
                   // { dataMonthYear = data[i].YEAR; }

                    //var rowItemRegionAll = '<tr id="' + data[i].NO + '" class="rowfil" ><td><h6 class="margin-lr0">' + num + '</h6></td><td><h6 class="margin-lr0">' + data[i].NAME + '</h6></td><td><h6 class="margin-lr0">' + data[i].REGION + '</h6></td><td><h6 class="margin-lr0">' + data[i].LICENSE + '</h6></td><td><h6 class="margin-lr0">' + data[i].VALUE + ' ' + unit + '</h6></td><td><h6 class="margin-lr0">' + data[i].THRESHOLD + '</h6></td><td><h6 class="margin-lr0">' + dataMonthYear + '</h6></td><td><h6 class="margin-lr0">' + data[i].TYPE + '</h6></td><td><center><a class="fa fa-globe fa-2x no-underline pointer" aria-hidden="true" data-toggle="modal" data-target="#ModalIfame" ><a></center></td></tr>';
                    //tblRegionAll.row.add($(rowItemRegionAll));
                    //$('#utilTbl > tbody >tr >td >a:last-child').data('map_info_report', data[i]);
                    //$('#utilTbl > tbody >tr >td >a:last-child').click(IfameReport);

                    //$('#utilTbl > tbody:last-child').append('<tr id="' + data[i].NO + '" class="rowfil" data-color="' + color1 + '" data-type="' + data[i].TYPE + '"><td><h6 class="margin-lr0">' + num + '</h6></td><td><h6 class="margin-lr0">' + data[i].NAME + '</h6></td><td><h6 class="margin-lr0">' + data[i].VALUE + ' %</h6></td><td><h6 class="margin-lr0">' + data[i].COLOR + '</h6></td><td><h6 class="margin-lr0">' + dataMonthYear + '</h6></td><td><h6 class="margin-lr0">' + data[i].COLOR + '</h6></td></tr>');
                }
                //tblRegionAll.draw();
                $("#GatePass").text(passGate);
                $("#PipePass").text(passPipe);

                $("#GateWarning").text(warningGate);
                $("#PipeWarning").text(warningPipe);

                $("#GateAlert").text(alertGate);
                $("#PipeAlert").text(alertPipe);

                $("#GateFlag").text(flagGate);
                $("#PipeFlag").text(flagPipe);

                $("#Current_GatePass").text(passGate);
                $("#Current_PipePass").text(passPipe);

                $("#Current_GateWarning").text(warningGate);
                $("#Current_PipeWarning").text(warningPipe);

                $("#Current_GateAlert").text(alertGate);
                $("#Current_PipeAlert").text(alertPipe);

                $("#Current_GateFlag").text(flagGate);
                $("#Current_PipeFlag").text(flagPipe);
            },
            error: function (result) {
                alert('Please select the data');
            }
        });

    //-----------------[ New Search ]---------------------//

        function VIEW_GATE_PIPE_REPORT_CURRENT(pType, pArrId) {
            var param = {
                pType: pType,
                pArrId: pArrId
            };
            
            var strUrl = "@Url.Action("VIEW_GATE_PIPE_REPORT_CURRENT")";
            $.post(strUrl, param, function (data2) {
                
                var passPipe = 0;
                var passGate = 0;
                var warningPipe = 0;
                var warningGate = 0;
                var alertGate = 0;
                var alertPipe = 0;
                var flagGate = 0;
                var flagPipe = 0;
                var data = data2.Result;

                showAllPIE(_strPipe, data);
                showAllPIE(_strGate, data);

                showUtilTableCurrent(data);
                

                var intMonth = 0;
                var intYear = 0;

                for (let i in data) {
                    var dataItem = data[i];
                    if (!dataItem) continue;

                    var strThreshold = dataItem.THRESHOLD;
                    var strType = dataItem.TYPE;

                    intMonth = dataItem.MONTH;
                    intYear = dataItem.YEAR;

                    if (_strGate === strType) {
                        if (strThreshold === _strOk) {
                            passGate++;
                        } else if (strThreshold === _strWarning) {
                            warningGate++;
                        } else if (strThreshold === _strAlert) {
                            alertGate++;
                        } else if (strThreshold === _strFlag) {
                            flagGate++;
                        }
                    } else if (_strPipe === strType) {
                        if (strThreshold === _strOk) {
                            passPipe++;
                        } else if (strThreshold === _strWarning) {
                            warningPipe++;
                        } else if (strThreshold === _strAlert) {
                            alertPipe++;
                        } else if (strThreshold === _strFlag) {
                            flagPipe++;
                        }
                    }

                }
                var strMonthName = monthNames[intMonth-1];
                $("#lblLeftDate").text(strMonthName + " " + intYear);
                $("#LeftDate").text(strMonthName + " " + intYear);


                $("#Current_GatePass").text(passGate);
                $("#Current_PipePass").text(passPipe);

                $("#Current_GateWarning").text(warningGate);
                $("#Current_PipeWarning").text(warningPipe);

                $("#Current_GateAlert").text(alertGate);
                $("#Current_PipeAlert").text(alertPipe);

                $("#Current_GateFlag").text(flagGate);
                $("#Current_PipeFlag").text(flagPipe);
            });
        }
    var _graphAllPipeLine = null;
    var _graphAllGate = null;


    Chart.plugins.register({
        afterDraw: function (chart) {
            if (chart.data.datasets.length === 0) {
                // No data is present
                var ctx = chart.chart.ctx;
                var width = chart.chart.width;
                var height = chart.chart.height
                chart.clear();

                ctx.save();
                ctx.textAlign = 'center';
                ctx.textBaseline = 'middle';
                ctx.font = "20px Tahoma";
                ctx.fillText('No Data Available', width / 2, height / 2);
                ctx.restore();
            }
        }
    });

   


    function showAllPIE(pStrMode, pListData) {
        let intAlert = 0;
        let intWarning = 0;
        let intOK = 0;
        let intFlag = 0;
        for (let i in pListData) {
            let data = pListData[i];

            if (data.TYPE !== pStrMode) {
                continue;
            }
            switch (data.THRESHOLD) {
                case _strOk:
                    intOK++;
                    break;
                case _strAlert:
                    intAlert++;
                    break;
                case _strWarning:
                    intWarning++;
                    break;
                case _strFlag:
                    intFlag++;
                    break;
            }
        }
        var arrData = [intAlert, intWarning, intOK, intFlag];
        var dsx = [];
        if (!arrData.every(function(x){return x===0})) {
            dsx = [{
                label: "Test Data",
                data: arrData,
                fill: false,
                backgroundColor: ["#e74c3c", "#f1c40f", "#16a085", "#e67e22"],
                hoverBackgroundColor: ["#e74c3c", "#f1c40f", "#16a085", "#e67e22"],
                borderColor: ["#e74c3c", "#f1c40f", "#16a085", "#e67e22"],
                borderWidth: 1
            }];
        }
        let dataT = {
            labels: ["Alert", "Warning", "OK", "Flag"],
            datasets: dsx
        };
        let strIdPie = "";
        let objGraph = null;
        if (pStrMode === _strPipe) {
            strIdPie = "#piePipelineAll";
            objGraph = _graphAllPipeLine;
        } else if (pStrMode === _strGate) {
            strIdPie = "#pieGateAll";
            objGraph = _graphAllGate
        }
        if (objGraph != null) {
            objGraph.destroy();
        }
        let ctx = $(strIdPie).get(0).getContext("2d");
        objGraph = new Chart(ctx, {
            type: 'doughnut',
            data: dataT,
            options: {
                responsive: true,
                pieceLabel: { mode: 'value', fontColor: 'white' },
                title: { display: true },
                legend: { position: 'bottom' },
                scales: {
                    xAxes: [{ gridLines: { display: false }, display: false, scaleLabel: { display: false, labelString: '' } }],
                    yAxes: [{ gridLines: { display: false }, display: false, scaleLabel: { display: false, labelString: '' }, ticks: { stepSize: 50, beginAtZero: true } }]
                },
            }
        });
        if (pStrMode === _strPipe) {
            _graphAllPipeLine = objGraph;
        } else if (pStrMode === _strGate) {
            _graphAllGate = objGraph;
        }
        objGraph.update();
    }

    //Check();
    Search();

    //VIEW_GATE_PIPE_REPORT_CURRENT("Region", $("#MultiRegion").val());

    //----------------[ PDF ]----------------------//

    function OpenReportPDF() {
        //alert($("#Year-filter").val());
        var strMode = document.getElementById('radioRegion').checked ? "region" : "license";
        var FliterVal ;
        //if (document.getElementById('radioYear').checked)
        //{ FliterVal = $("#Year-filter").val(); }
    //else if (document.getElementById('radioMonth').checked) {
        FliterVal = $("#Month-filter").val(); 
    //}

        var param = {
            SearchMode: strMode,
            ArrID: $("#MultiRegion").val(),
            Period: FliterVal,
            Threshold: $("#seAllThres").val(),
            SearchType: $("#type-filter").val()
            //pModel: {
            //}
        };
        var strUrl = "@Url.Action("UtilizationReportPdf" , "Pdf")";
        $.post(strUrl, param, function (data) {
            if (data.Result === "OK") {
                $("#frmReportPDF").submit();
            } else {
                alert("Error");
            }
        }).fail(function (e) {            
            alert("Error");
        });
    };

</script> 