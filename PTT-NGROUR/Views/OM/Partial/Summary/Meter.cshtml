@model PTT_NGROUR.Models.ViewModel.ModelOmIndex
@using System.Globalization

@{
    string monthName = new DateTime(Model.Year, Model.Month, 1).ToString("MMMM", CultureInfo.InvariantCulture);
    var summary = Model.Mode.Equals("yearly") ? Model.Summary.Meter.Accumulate : Model.Summary.Meter.Current;
}

<div class="table-responsive">
    <table id="Summary" class="table-summary table table-bordered table-striped">
        <thead>
            <tr>
                <th rowspan="2" class="h4 b">Equipment (M/R St.)</th>
                @if (Model.Mode.Equals("monthly"))
                {
                    <th colspan="5" class="bg-blue text-center">
                        @monthName @Model.Year
                    </th>
                }
                <th colspan="5" class="bg-blue text-center">
                    January - @monthName @Model.Year (Accumulate)
                </th>
            </tr>
            <tr>
                @if (Model.Mode.Equals("monthly"))
                {
                    <th>Plan</th>
                    <th>Actual</th>
                    <th>% Completion</th>
                    <th>% Overall</th>
                }
                <th>Plan</th>
                <th>Actual</th>
                <th>% Completion</th>
                <th>% Overall</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var ml in Model.Master.MaintenanceLevel.Select((value, i) => new { i, value }))
            {
                var type = summary.Select((value, i) => new { i, value }).FirstOrDefault();
                var item = type == null ? null : type.value.Activities.Select((value, i) => new { i, value }).SingleOrDefault(x => x.value.PM_ID.Equals(ml.value.ML_ID));
            <tr>
                <td class="pm-name text-truncate text-left text-white text-white"
                    style="background-color: @ml.value.ML_HEX">
                    @ml.value.ML_ID
                </td>
                @if (Model.Mode.Equals("monthly"))
                {
                    <td><span>@(item == null ? "-" : item.value.PLAN.ToString("N0"))</span></td>
                    <td><span>@(item == null ? "-" : item.value.ACTUAL.ToString("N0"))</span></td>
                    <td><span>@(item == null ? "-" : item.value.PERCENTAGE.ToString("N0") + "%")</span></td>
                    if (ml.i.Equals(0))
                    {
                        <td rowspan="@Model.Master.MaintenanceLevel.Count()" class="text-center text-middle">
                            <h3>
                                <strong>
                                    @(item == null ? "-" : Model.Summary.Meter.CurrentOrverallPercentage.ToString("N0") + "%")
                                </strong>
                            </h3>
                        </td>
                    }
                }

                <!-- [Accumulate ]-->
                <td><span>@(Model.Summary.Meter.Accumulate.Count() == 0 || !Model.Summary.Meter.Accumulate.First().Activities.Exists(x => x.PM_ID.Equals(ml.value.ML_ID)) ? "-" : Model.Summary.Meter.Accumulate[0].Activities[ml.i].PLAN.ToString("N0"))</span></td>
                <td><span>@(Model.Summary.Meter.Accumulate.Count() == 0 || !Model.Summary.Meter.Accumulate.First().Activities.Exists(x => x.PM_ID.Equals(ml.value.ML_ID)) ? "-" : Model.Summary.Meter.Accumulate[0].Activities[ml.i].ACTUAL.ToString("N0"))</span></td>
                <td><span>@(Model.Summary.Meter.Accumulate.Count() == 0 || !Model.Summary.Meter.Accumulate.First().Activities.Exists(x => x.PM_ID.Equals(ml.value.ML_ID)) ? "-" : Model.Summary.Meter.Accumulate[0].Activities[ml.i].PERCENTAGE.ToString("N0") + "%")</span></td>
                @if (ml.i.Equals(0))
                {
                    <td rowspan="@Model.Master.MaintenanceLevel.Count()" class="text-center text-middle">
                        <h3>
                            <strong>
                                @(Model.Summary.Meter.Accumulate.Count() == 0 ? "-" : Model.Summary.Meter.AccumulateOrverallPercentage.ToString("N0") + "%")
                            </strong>
                        </h3>
                    </td>
                }
            </tr>
            }
        </tbody>
    </table>
</div>